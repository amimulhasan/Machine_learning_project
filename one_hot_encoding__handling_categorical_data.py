# -*- coding: utf-8 -*-
"""One Hot Encoding _Handling Categorical Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fEqAZ15ukoxryXosEB8GJflg96GWhXi2
"""

import pandas as pd
import numpy as np



df=pd.read_csv('/content/cars.csv')

df

df.head()

df.sample()

df['brand'].value_counts()

df['fuel'].value_counts()

"""OneHotEncoding using Pandas

"""

pd.get_dummies(df,columns=['fuel','owner'])

"""# **K-1 OneHotEncoding**"""

pd.get_dummies(df,columns=['fuel','owner'],)

""" OneHotEncoding using Sklearn


"""

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(df.iloc[:,0:4],df.iloc[:,-1],test_size=0.2)

x_train.head()

from sklearn.preprocessing import OneHotEncoder

ohe = OneHotEncoder()

x_train_new=ohe.fit_transform(x_train[['fuel','owner']])

x_train_new

x_test_new=ohe.transform(x_test[['fuel','owner']])

# np.hstack((x_train[['brand','km_driven']].values,x_train_new))

"""# OneHotEncoding with Top Categories"""

counts = df['brand'].value_counts()

df['brand'].nunique()
threshold = 100

repl = counts[counts <= threshold].index

pd.get_dummies(df['brand'].replace(repl, 'uncommon')).sample(5)

